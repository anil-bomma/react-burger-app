[{"D:\\dev-zone\\react-burger-app\\src\\index.js":"1","D:\\dev-zone\\react-burger-app\\src\\App.js":"2","D:\\dev-zone\\react-burger-app\\src\\Person\\Person.js":"3","D:\\dev-zone\\react-burger-app\\src\\Person\\Counter.js":"4","D:\\dev-zone\\react-burger-app\\src\\Person\\PersonHooks.js":"5","D:\\dev-zone\\react-burger-app\\src\\Person\\TwoWayDataBinding.js":"6"},{"size":454,"mtime":1607978678604,"results":"7","hashOfConfig":"8"},{"size":2805,"mtime":1608144568665,"results":"9","hashOfConfig":"8"},{"size":373,"mtime":1608010771656,"results":"10","hashOfConfig":"8"},{"size":532,"mtime":1608164498708,"results":"11","hashOfConfig":"8"},{"size":1027,"mtime":1608010503684,"results":"12","hashOfConfig":"8"},{"size":347,"mtime":1607989860497,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"e7mjwx",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\dev-zone\\react-burger-app\\src\\index.js",[],["28","29"],"D:\\dev-zone\\react-burger-app\\src\\App.js",["30"],"import React, { Component } from \"react\";\nimport Radium, { StyleRoot } from \"radium\"; // used to add inline css, pseduo syle an media query\nimport styled from 'styled-components'; \n\n\nimport Person from \"./Person/Person\";\nimport Counter from \"./Person/Counter\";\nimport PersonHook from \"./Person/PersonHooks\";\nimport TwoWayDataBinding from \"./Person/TwoWayDataBinding\";\n\n\nclass App extends Component {\n\n  // when ever state changes react will re-redner the dom with new state\n  state = {\n    persons: [{ name: \"BB\" }, { name: \"Bc\" }],\n    name: \"asas\",\n    i: 0,\n    twoWay: \"Hi\"\n  };\n\n  switchNameHandler = () => {\n    this.setState({\n      persons: [{ name: \"CB\" + this.state.i }, { name: \"Bc\" }],\n      i: this.state.i + 1\n    });\n  }\n\n  switchNameWithArgs = (args) => {\n    console.log(args)\n    this.setState({\n      persons: [{ name: args + \" \" + this.state.i }, { name: \"Bc\" }],\n      i: this.state.i + 1\n    });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      twoWay: e.target.value\n    });\n  }\n\n  handleChangeClick = (args) => {\n    this.setState({\n      twoWay: args\n    });\n  }\n\n  deleteHandler = (index) => {\n    const p = this.state.persons;\n    p.splice(index, 1);\n    this.setState({\n      persons: p\n    });\n  }\n\n  render() {\n    const personMap = this.state.persons.map((item, index) => (\n      <Person key={item.name} name={item.name} deletePar={() => this.deleteHandler(index)}> map object</Person>\n    ));\n\n    const style = {\n      padding: \"50px\"\n    }\n\n\n    const btn = {\n      backgroundColor: \"green\",\n      color: \"white\",\n      ':hover': {\n        backgroundColor: \"lightgreen\",\n        color: \"black\",\n      }\n    }\n    return (\n      <StyleRoot>\n        <div style={style}>\n          <h1>Hello World!!</h1>\n          <p>This is working really</p>\n          <hr />\n          <Person name=\"Ab\" click={this.switchNameWithArgs}>Props Children and child to patent click me!!</Person>\n          <Person name=\"Ac\" click={this.switchNameWithArgs} />\n          <Person name=\"Ad\" click={this.switchNameWithArgs} />\n          <hr />\n          <Counter name=\"Counter Stricker: \" />\n          <hr />\n          {personMap}\n          <button style={btn} onClick={this.switchNameHandler}>Change Name</button>\n          <button onClick={this.switchNameWithArgs.bind(this, \"args1\")}>Args 1</button>\n          <button onClick={() => this.switchNameWithArgs(\"args2\")}>Args 2</button>\n          <hr />\n          <PersonHook></PersonHook>\n\n          <hr></hr>\n          <h3>Child to parent and two way data-binding</h3>\n          {this.state.twoWay}\n          <TwoWayDataBinding handleChangeClick={this.handleChangeClick} handleChange={this.handleChange} twoWay={this.state.twoWay} />\n        </div>\n      </StyleRoot>\n    );\n  }\n}\n\nexport default Radium(App); // this higger order function\n","D:\\dev-zone\\react-burger-app\\src\\Person\\Person.js",[],"D:\\dev-zone\\react-burger-app\\src\\Person\\Counter.js",[],"D:\\dev-zone\\react-burger-app\\src\\Person\\PersonHooks.js",[],"D:\\dev-zone\\react-burger-app\\src\\Person\\TwoWayDataBinding.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":3,"column":8,"nodeType":"37","messageId":"38","endLine":3,"endColumn":14},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]